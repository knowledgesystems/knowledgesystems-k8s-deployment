apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aws-credentials-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aws-credentials-refresher
spec:
  schedule: "0 */3 * * *"  # Every 3 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: saml2aws
              image: public.ecr.aws/ubuntu/ubuntu:22.04_stable
              command:
                - /bin/bash
                - -c
                - |
                  set -e
                  
                  # Set HOME to /home/node because that's where librechat is mounted
                  export HOME=/home/node
                  mkdir -p $HOME/.aws
                  
                  # Install dependencies
                  apt-get update
                  apt-get install -y wget
                  
                  # Install saml2aws
                  wget -O saml2aws.tar.gz https://github.com/Versent/saml2aws/releases/download/v2.36.18/saml2aws_2.36.18_linux_arm64.tar.gz
                  tar -xzvf saml2aws.tar.gz
                  mv saml2aws /usr/local/bin/
                  chmod +x /usr/local/bin/saml2aws
                  saml2aws --version
                  
                  # Configure saml2aws
                  saml2aws configure \
                    --idp-provider=Ping \
                    --mfa=Auto \
                    --url=$SAML2AWS_URL \
                    --username=$SAML2AWS_USERNAME \
                    --aws-urn=urn:amazon:webservices \
                    --session-duration=28800 \
                    --skip-prompt \
                    --profile=default
                  
                  # Login
                  saml2aws login --force --skip-prompt
              envFrom:
                - secretRef:
                    name: aws-saml-creds
              volumeMounts:
                - name: aws-creds
                  mountPath: /home/node/.aws
          volumes:
            - name: aws-creds
              persistentVolumeClaim:
                claimName: aws-credentials-pvc
          nodeSelector:
            workload: cbioagent
          tolerations:
            - key: "workload"
              operator: "Equal"
              value: "cbioagent"
              effect: "NoSchedule"
          restartPolicy: OnFailure