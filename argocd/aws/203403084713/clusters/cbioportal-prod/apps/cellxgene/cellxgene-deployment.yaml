# 1. AWS EKS role for S3 access instead of AWS_ACCESS_KEY or a SECRETS/Configmap setup
# Secrets for AWS Creds
# 2. Subdomain/Host for cellxgene resources cellxgene.cbioportal.org
# 3. Configmap for setting source bucket 
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-1
  labels:
    app: cellxgene
    dataset: pbmc3k.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: pbmc3k.h5ad
  template:
    metadata:
      labels:
        dataset: pbmc3k.h5ad
    spec:
      containers:
        - name: cellxgene-app
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch", 
            "-p", 
            "8080", 
            "--host", 
            "0.0.0.0", 
            "--backed", 
            "--disable-annotations", 
            "--disable-gene-sets-save", 
            "/mountpoint-s3/pbmc3k.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 500Mi 
              cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60 
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-4
  labels:
    app: cellxgene
    dataset: Q3_norm_all_batch_reduced_meta_1.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: Q3_norm_all_batch_reduced_meta_1.h5ad
  template:
    metadata:
      labels:
        dataset: Q3_norm_all_batch_reduced_meta_1.h5ad
    spec:
      containers:
        - name: cellxgene-app
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch", 
            "-p", 
            "8080", 
            "--host", 
            "0.0.0.0", 
            "--backed", 
            "--disable-annotations", 
            "--disable-gene-sets-save", 
            "/mountpoint-s3/Q3_norm_all_batch_reduced_meta_1.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 500Mi 
              cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60 
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-8
  labels:
    app: cellxgene
    dataset: gbm_filtered_processing2.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: gbm_filtered_processing2.h5ad
  template:
    metadata:
      labels:
        dataset: gbm_filtered_processing2.h5ad
    spec:
      containers:
        - name: cellxgene-app8
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "--gene-sets-file",
            "/genesets/gbm_filtered_processing2_fixed_genesets.csv",
            "/mountpoint-s3/btc-gbm/gbm_filtered_processing2_fixed.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-9
  labels:
    app: cellxgene
    dataset: scrna_MDA_with_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: scrna_MDA_with_inhibitor_filtered_feature_bc_matrix.h5ad
  template:
    metadata:
      labels:
        dataset: scrna_MDA_with_inhibitor_filtered_feature_bc_matrix.h5ad
    spec:
      containers:
        - name: cellxgene-app9
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "--gene-sets-file",
            "/genesets/example_genesets.csv",
            "/mountpoint-s3/btc-gbm/pilot/pilot_sharmalab_processed_scrna_MDA_with_inhibitor_filtered_feature_bc_matrix_prepared.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          env:
          - name: GENESET_FILE
            value: https://raw.githubusercontent.com/hweej/single-cell-tools/main/cellxgene/genesets/example_genesets.csv
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-10
  labels:
    app: cellxgene
    dataset: scrna_MDA_without_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: scrna_MDA_without_inhibitor_filtered_feature_bc_matrix.h5ad
  template:
    metadata:
      labels:
        dataset: scrna_MDA_without_inhibitor_filtered_feature_bc_matrix.h5ad
    spec:
      containers:
        - name: cellxgene-app10
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "/mountpoint-s3/btc-gbm/pilot/pilot_sharmalab_processed_scrna_MDA_without_inhibitor_filtered_feature_bc_matrix_prepared.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-11
  labels:
    app: cellxgene
    dataset: scrna_MSK_no_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: scrna_MSK_no_inhibitor_filtered_feature_bc_matrix.h5ad
  template:
    metadata:
      labels:
        dataset: scrna_MSK_no_inhibitor_filtered_feature_bc_matrix.h5ad
    spec:
      containers:
        - name: cellxgene-app11
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "/mountpoint-s3/btc-gbm/pilot/pilot_sharmalab_processed_scrna_MSK_no_inhibitor_filtered_feature_bc_matrix_prepared.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-12
  labels:
    app: cellxgene
    dataset: scrna_MSK_with_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: scrna_MSK_with_inhibitor_filtered_feature_bc_matrix.h5ad
  template:
    metadata:
      labels:
        dataset: scrna_MSK_with_inhibitor_filtered_feature_bc_matrix.h5ad
    spec:
      containers:
        - name: cellxgene-app12
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "/mountpoint-s3/btc-gbm/pilot/pilot_sharmalab_processed_scrna_MSK_with_inhibitor_filtered_feature_bc_matrix_prepared.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-13
  labels:
    app: cellxgene
    dataset: scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix.h5ad
  template:
    metadata:
      labels:
        dataset: scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix.h5ad
    spec:
      containers:
        - name: cellxgene-app13
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "/mountpoint-s3/btc-gbm/trial1a_sharma_lab_scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix_prepared.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          volumeMounts:
            - name: mountpoint-s3
              mountPath: /mountpoint-s3
      volumes:
        - name: mountpoint-s3
          persistentVolumeClaim:
            claimName: s3-claim
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cellxgene
  name: cellxgene-deploy-14
  labels:
    app: cellxgene
    dataset: msk_spectrum_all.h5ad
spec:
  replicas: 1
  selector:
    matchLabels:
      dataset: msk_spectrum_all.h5ad
  template:
    metadata:
      labels:
        dataset: msk_spectrum_all.h5ad
    spec:
      containers:
        - name: cellxgene-app14
          image: 'edit01/cellxgene:1.2.0'
          command: ["cellxgene"]
          args: [
            "launch",
            "-p",
            "8080",
            "--host",
            "0.0.0.0",
            "--backed",
            "--disable-annotations",
            "--disable-gene-sets-save",
            "s3://jason-test-workspace/spectrum_all_cells.h5ad"
          ]
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: Always
          # resources:
          #   limits:
          #     memory: 7Gi
          #     cpu: 250m
          readinessProbe: # Block traffic to container if not ready
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          livenessProbe: # Restart container if not healthy
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 600  # 10min
            periodSeconds: 3600 # 1hr
            failureThreshold: 2
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: cellxgene-creds
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: cellxgene-creds
                key: aws_secret_access_key
      # run on big memory machine
      nodeSelector:
        workload: cellxgene
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "cellxgene"
          effect: "NoSchedule"
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-1
  labels:  # For convenience
    app: cellxgene
    dataset: pbmc3k.h5ad
spec:
  selector:
    dataset: pbmc3k.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-2
  labels:  # For convenience
    app: cellxgene
    dataset: scRNA_rds_Ovarian_Malignant_cluster_object.h5ad
spec:
  selector:
    dataset: scRNA_rds_Ovarian_Malignant_cluster_object.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-3
  labels:  # For convenience
    app: cellxgene
    dataset: scRNA_rds_Ovarian_nonMalignant_cluster_object.h5ad
spec:
  selector:
    dataset: scRNA_rds_Ovarian_nonMalignant_cluster_object.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-4
  labels:  # For convenience
    app: cellxgene
    dataset: Q3_norm_all_batch_reduced_meta_1.h5ad
spec:
  selector:
    dataset: Q3_norm_all_batch_reduced_meta_1.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-8
  labels:  # For convenience
    app: cellxgene
    dataset: gbm_filtered_processing2.h5ad
spec:
  selector:
    dataset: gbm_filtered_processing2.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-9
  labels:  # For convenience
    app: cellxgene
    dataset: scrna_MDA_with_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  selector:
    dataset: scrna_MDA_with_inhibitor_filtered_feature_bc_matrix.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-10
  labels:  # For convenience
    app: cellxgene
    dataset: scrna_MDA_without_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  selector:
    dataset: scrna_MDA_without_inhibitor_filtered_feature_bc_matrix.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-11
  labels:  # For convenience
    app: cellxgene
    dataset: scrna_MSK_no_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  selector:
    dataset: scrna_MSK_no_inhibitor_filtered_feature_bc_matrix.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-12
  labels:  # For convenience
    app: cellxgene
    dataset: scrna_MSK_with_inhibitor_filtered_feature_bc_matrix.h5ad
spec:
  selector:
    dataset: scrna_MSK_with_inhibitor_filtered_feature_bc_matrix.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-13
  labels:  # For convenience
    app: cellxgene
    dataset: scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix.h5ad
spec:
  selector:
    dataset: scrna_DFCI1_BTC-GBM-001-003-GEX_filtered_feature_bc_matrix.h5ad
  ports:
    - port: 8080
---
kind: Service
apiVersion: v1
metadata:
  namespace: cellxgene
  name: cellxgene-service-14
  labels:  # For convenience
    app: cellxgene
    dataset: msk_spectrum_all.h5ad
spec:
  selector:
    dataset: msk_spectrum_all.h5ad
  ports:
    - port: 8080


