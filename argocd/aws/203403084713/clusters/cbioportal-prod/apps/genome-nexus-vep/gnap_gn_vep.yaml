apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: genome-nexus-vep
    run: gnap-gn-vep
  name: gnap-gn-vep
  namespace: genome-nexus
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: gnap-gn-vep
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: gnap-gn-vep
    spec:
      containers:
      - env:
        - name: SERVER_PORT
          value: "8888"
        image: genomenexus/gn-vep:05c7b326506ad9ec46cdc23be50f871730eb8c42
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /vep/human/region/7:140453136-140453136:1/T
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 120
        name: gnap-gn-vep
        ports:
        - containerPort: 8888
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /vep/human/region/7:140453136-140453136:1/T
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 120
        resources:
          requests:
              memory: 20Gi
          limits:
              memory: 30Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/vep/.vep
          name: vep-data
          subPath: cache
      dnsPolicy: ClusterFirst
      # download data from s3 bucket (takes ~6m).
      # TODO: It might be better to create a volume from an existing snapshot.
      initContainers:
      - args:
        - |
          set -euo pipefail
          cd /vep_data
          if [ -d cache ] && [ -f cache/homo_sapiens/98_GRCh37/LRG_7/all_vars.gz.csi ]; then
            exit 0
          fi
          mkdir -p cache/tmp
          chmod a+w cache/tmp

          curl -fL --retry 5 -o file_list.txt https://genome-nexus-vep-data.s3.amazonaws.com/file_list.txt

          while IFS= read -r f; do
            [ -z "$f" ] && continue
            mkdir -p "$(dirname "$f")"
            curl -fL --retry 5 "https://genome-nexus-vep-data.s3.amazonaws.com/$f" -o "$f"
          done < file_list.txt

          cd cache
          tar xvf homo_sapiens_vep_98_GRCh37.tar
        command:
        - sh
        - -c
        image: curlimages/curl:8.7.1
        imagePullPolicy: IfNotPresent
        name: download-vep-cache
        resources: {}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /vep_data
          name: vep-data
      nodeSelector:
        workload: gn-vep
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: workload
        operator: Equal
        value: gn-vep
  volumeClaimTemplates:
    - metadata:
        name: vep-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp2
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: gnap-gn-vep
    app: gnap-gn-vep
  name: gnap-gn-vep
  namespace: genome-nexus
  selfLink: /api/v1/namespaces/genome-nexus/services/gnap-gn-vep
spec:
  ports:
  - port: 80
    name: http
    targetPort: 8888
  - port: 443
    name: https
    targetPort: 8888
  selector:
    run: gnap-gn-vep
  type: ClusterIP
