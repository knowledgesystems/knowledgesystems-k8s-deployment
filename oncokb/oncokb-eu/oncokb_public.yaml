apiVersion: apps/v1
kind: Deployment
metadata:
  name: oncokb-public
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oncokb-public
      version: "v1"
  strategy:
    # We want to do a rolling updates to make sure all old instances removed before last new pod is initialized.
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oncokb-public
        version: "v1"
    spec:
      containers:
        - name: oncokb-public
          image: oncokb/oncokb-public:3.14.6
          env:
            # Database schema update takes a lot of especially when changing a table with a lot of table
            # We should disable the liveness prob to avoid the pod to be terminated before the liquibase finish all the work
            - name: SPRING_PROFILES_ACTIVE
              value: prod,no-liquibase
            - name: JAVA_OPTS
              value: "-Xmx1024m -Xms512m"
            - name: APPLICATION_AWS_S3_ACCESS_KEY
              value: "$(ACCESS_KEY_ID)"
            - name: APPLICATION_AWS_S3_REGION
              value: "$(AWS_REGION)"
            - name: APPLICATION_AWS_S3_SECRET_KEY
              value: "$(SECRET_ACCESS_KEY)"
            - name: APPLICATION_GITHUB_TOKEN
              value: "$(ONCOKBDEV_PUBLIC_ACCESS_TOKEN)"
            - name: APPLICATION_REDIS_TYPE
              value: '$(REDIS_TYPE)'
            - name: APPLICATION_REDIS_ADDRESS
              value: "$(REDIS_ADDRESS)"
            - name: APPLICATION_REDIS_PASSWORD
              value: "$(REDIS_PASSWROD)"
            - name: SENTRY_EXCEPTION_RESOLVER_ORDER
              value: "-2147483647"
            - name: SENTRY_TRACES_SAMPLE_RATE
              value: ".2"
            - name: SPRING_DATASOURCE_URL
              value: "${DB_URL}/oncokb_public"
            - name: SPRING_DATASOURCE_USERNAME
              value: "${DB_USERNAME}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "${DB_PASSWORD}"
          envFrom:
            - configMapRef:
                name: oncokb-public
            - configMapRef:
                name: aws-cli-credentials
            - configMapRef:
                name: oncokb-github
            - configMapRef:
                name: oncokb-redis-cluster
            - configMapRef:
                name: oncokb-db-public-rds-oncokb-public
          readinessProbe:
            httpGet:
              path: /
              port: 9095
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /
              port: 9095
            initialDelaySeconds: 90
            timeoutSeconds: 15
            periodSeconds: 15
            failureThreshold: 10
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
            limits:
              memory: "2Gi"
              cpu: "2"
          ports:
            - name: http
              containerPort: 9095

---
apiVersion: v1
kind: Service
metadata:
  name: oncokb-public
  labels:
    app: oncokb-public
spec:
  selector:
    app: oncokb-public
  type: ClusterIP
  ports:
    - name: http
      port: 9095
