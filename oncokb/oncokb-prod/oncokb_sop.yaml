apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  labels:
    run: oncokb-sop
  name: oncokb-sop
  namespace: oncokb
spec:
  replicas: 1
  selector:
    matchLabels:
      run: oncokb-sop
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: oncokb-sop
    spec:
      containers:
        - env:
          image: oncokb/oncokb-sop:5.1.0
          imagePullPolicy: Always
          # use actionable variants endpoint to cache everything
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 3000
          name: oncokb-sop
          ports:
            - containerPort: 80
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "eks-oncokb"
          effect: "NoSchedule"
      nodeSelector:
        eks.amazonaws.com/nodegroup: eks-oncokb
---
apiVersion: v1
kind: Service
metadata:
  name: oncokb-sop
  namespace: oncokb
spec:
  ports:
    - port: 80
      name: http
      targetPort: 80
  selector:
    run: oncokb-sop
  type: ClusterIP
