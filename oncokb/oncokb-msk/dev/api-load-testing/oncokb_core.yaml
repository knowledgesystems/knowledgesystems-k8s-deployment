apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  labels:
    run: oncokb-core
  name: oncokb-core
spec:
  replicas: 8
  selector:
    matchLabels:
      run: oncokb-core
  strategy:
    rollingUpdate:
      # We want to do a rolling updates to make sure all old instances removed before last new pod is initialized.
      maxSurge: 0
      maxUnavailable: 4
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: oncokb-core
    spec:
      containers:
        - env:
          envFrom:
            - configMapRef:
                name: oncokb-core
            - configMapRef:
                name: oncokb-db-msk-dev-rds
            - configMapRef:
                name: oncokb-redis-cluster
          image: oncokb/oncokb:3.21.1-alpha.1-with-cache
          command: ["java"]
          args: [
              # from https://developers.redhat.com/blog/2017/04/04/openjdk-and-containers/
              "-Xms500m",
              "-XX:+UseSerialGC",
              # aggressive garbage collection
              "-XX:MinHeapFreeRatio=20",
              "-XX:MaxHeapFreeRatio=40",
              "-XX:GCTimeRatio=4",
              "-XX:AdaptiveSizePolicyWeight=90",
              "-XX:+UnlockExperimentalVMOptions",
              "-XX:+UseCGroupMemoryLimitForHeap",
              # use maxRAMFraction > 1 https://github.com/akka/akka/issues/23499
              "-XX:MaxRAMFraction=2",
              "-XX:+PrintFlagsFinal",
              "-XshowSettings:vm",
              # need to set MaxRAM, somehow the MaxRAMFraction is not picked up
              # from the limits
              "-XX:MaxRAM=2g",
              "-Dapp.name=$(APP_NAME)",
              "-Djdbc.driverClassName=com.mysql.jdbc.Driver",
              "-Djdbc.url=$(DB_URL)/oncokb_core?useUnicode=yes&characterEncoding=UTF-8&useSSL=false",
              "-Djdbc.username=$(DB_USERNAME)",
              "-Djdbc.password=$(DB_PASSWORD)",
              "-Dgenome_nexus.grch37.url=http://genome-nexus",
              "-Daws.s3.accessKey=$(ACCESS_KEY_ID)",
              "-Daws.s3.secretKey=$(SECRET_ACCESS_KEY)",
              "-Daws.s3.region=$(AWS_REGION)",
              "-Doncokb_data.access_token=$(ONCOKBDEV_PRIVATE_ACCESS_TOKEN)",
              "-Doncokb_transcript.token=$(ONCOKB_TRANSCRIPT_TOKEN)",
              "-Dredis.enable=false",
              "-Dredis.type=$(REDIS_TYPE)",
              "-Dredis.address=$(REDIS_ADDRESS)",
              "-Dredis.password=$(REDIS_PASSWORD)",
              "-Dredis.expiration=$(REDIS_EXPIRATION)",
              "-Dswagger_url=https://www.oncokb.org",
              "-Dshow_sitemaps=false",
              "-jar",
              "/webapp-runner.jar",
              "--enable-compression",
              "--port",
              "8888",
              "/app.war",
            ]
          imagePullPolicy: Always
          # use actionable variants endpoint to cache everything
          readinessProbe:
            httpGet:
              path: /api/v1/utils/allActionableVariants
              port: 8888
            initialDelaySeconds: 15
            timeoutSeconds: 10
            periodSeconds: 20
            failureThreshold: 60
          livenessProbe:
            httpGet:
              path: /api/v1/utils/allActionableVariants
              port: 8888
            # wait for the pod is ready
            initialDelaySeconds: 300
            timeoutSeconds: 5
            periodSeconds: 20
            failureThreshold: 60
          name: oncokb-core
          ports:
            - containerPort: 8888
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 4000m
              memory: 4Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "eks-oncokb-load-testing"
          effect: "NoSchedule"
      nodeSelector:
        eks.amazonaws.com/nodegroup: eks-oncokb-load-testing
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: oncokb-core
  name: oncokb-core
spec:
  ports:
    - port: 8888
  selector:
    run: oncokb-core
  type: ClusterIP
