kind: ConfigMap
apiVersion: v1
metadata:
  name: mysql-config
  labels:
    app: mysql
data:
  default_auth: |
    [mysqld]
    default-authentication-plugin=mysql_native_password
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-dump-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 12Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-dump-pv
spec:
  capacity:
    storage: 12Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data/mysql-dumps"
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    run: homo-sapiens-core-mysql
  name: homo-sapiens-core-mysql
spec: 
  replicas: 1
  selector:
    matchLabels:
      run: homo-sapiens-core-mysql
  template:
    metadata:
      labels:
        run: homo-sapiens-core-mysql
    spec: 
      initContainers:
      - name: wait-for-sql-dump
        image: debian:bullseye-slim
        command:
          - /bin/sh
          - -c
          - |
            FILE_PATH="/dumps/homo_sapiens_core_112_37.sql"
            while [ ! -f "$FILE_PATH" ]; do
              echo "Waiting for homo_sapiens_core_112_37.sql dump to be available..."
              sleep 2
            done

            last_size=0
            while true; do
              echo "homo_sapiens_core_112_37.sql is available, waiting for copy to finish."
              current_size=$(stat --format=%s "$FILE_PATH")
              
              if [ "$current_size" -gt 0 ] && [ "$current_size" -eq "$last_size" ]; then
                echo "homo_sapiens_core_112_37.sql dump file is stable and ready."
                break
              fi
              
              last_size=$current_size
              sleep 5
            done
        volumeMounts:
          - name: mysql-dump-volume
            mountPath: /dumps
      containers:
      - name: homo-sapiens-core-db
        image: mysql:8.0
        imagePullPolicy: Always
        env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: homo-sapiens-core-db-creds
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homo-sapiens-core-db-creds
              key: mysql-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homo-sapiens-core-db-creds
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: homo_sapiens_core_112_37
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: homo-sapiens-core-pv
          mountPath: /var/lib/mysql
        - name: mysql-config-volume
          mountPath: /etc/mysql/conf.d/default_auth.cnf
          subPath: default_auth
        - name: mysql-dump-volume
          mountPath: /docker-entrypoint-initdb.d
      volumes: 
      - name: mysql-config-volume
        configMap:
          name: mysql-config
      - name: mysql-dump-volume
        persistentVolumeClaim:
          claimName: mysql-dump-pvc
      nodeSelector:
        eks.amazonaws.com/nodegroup: eks-genome-nexus-vep
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "eks-genome-nexus-vep"
          effect: "NoSchedule"
  volumeClaimTemplates:
  - metadata:
      name: homo-sapiens-core-pv
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: homo-sapiens-core-mysql
  name: homo-sapiens-core-mysql
  namespace: genome-nexus
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    run: homo-sapiens-core-mysql
  type: ClusterIP